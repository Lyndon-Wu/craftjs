#!/usr/bin/env node

var ejs = require('ejs')
var fs = require('fs')
var open = require('open')
var path = require('path')

var craft = require('../lib/craft')
var S = craft.openscad;

var program = require('commander');

var templates_root = 'lib/viewers/templates'

program
    .version('0.0.1')

program
    .command('part')
    .description('build and view examples')
    .action(function(arg1) {



        var componentName = arg1;

        var c = craft.parts.lookup(componentName);

        var templateFile = templates_root + '/' + 'three.ejs';
        var template = fs.readFileSync(templateFile, 'utf8');

        var examples = craft.generateExamples(c);

        var viewerHtml = ejs.render(template, {
            examples: examples,
            component: c
        });
        var viewerFile = 'build/part_' + componentName + '.html';

        fs.writeFileSync(viewerFile, viewerHtml);

        console.log("viewer is saved as [" + viewerFile + "]");

        open(viewerFile);
    });


program
    .command('xml')
    .description('create a craftML model')
    .action(function(input) {

        var xmlstring = fs.readFileSync(input, 'utf8');
        var csg = craft.makeFromXml(xmlstring);

        var stlstring = csg.toStlString();

        var templateFile = templates_root + '/' + 'one.ejs';
        var template = fs.readFileSync(templateFile, 'utf8');

        var basename = path.basename(input, '.xml')

        var viewerHtml = ejs.render(template, {
            stlstring: stlstring,
            xmlstring: xmlstring
        });
        var viewerFile = 'build/page_' + basename + '.html';

        fs.writeFileSync(viewerFile, viewerHtml);

        console.log("viewer is saved as [" + viewerFile + "]");

        open(viewerFile);
    });

program.parse(process.argv);